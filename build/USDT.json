{
  "contractName": "USDT",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/mnt/d/AGIN-WORKS-GITHUB/AURORA/factory-amm/contracts/MockTokens.sol\":\"USDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/d/AGIN-WORKS-GITHUB/AURORA/factory-amm/contracts/MockTokens.sol\":{\"keccak256\":\"0x918186c843ce85fc9090b79578ff563c04b4d270d2dcf180ddc6b04ef5ffdce9\",\"urls\":[\"bzz-raw://6c9fc84ff875788bf4351bce457107974f16c25d2931dc665ec408b6f4ed844a\",\"dweb:/ipfs/QmQZ4C7abdZCDk1WeD2hAkf1b59ZUWBBQ7o9VbQWq4nYuL\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604080518082018252600a81526915195d1a195c881554d160b21b6020808301918252835180850190945260048452631554d11560e21b9084015281519192916006916100619160039190610092565b508151610075906004906020850190610092565b506005805460ff191660ff929092169190911790555061012d9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100d357805160ff1916838001178555610100565b82800160010185558215610100579182015b828111156101005782518255916020019190600101906100e5565b5061010c929150610110565b5090565b61012a91905b8082111561010c5760008155600101610116565b90565b6109dd8061013c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461021057806370a082311461023e57806395d89b4114610264578063a457c2d71461026c578063a9059cbb14610298578063dd62ed3e146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610388565b604080519115158252519081900360200190f35b61017e61039e565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b038135811691602081013590911690604001356103a4565b6101ce6103fb565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b038135169060200135610404565b61023c6004803603604081101561022657600080fd5b506001600160a01b038135169060200135610440565b005b61017e6004803603602081101561025457600080fd5b50356001600160a01b031661044e565b6100c1610469565b6101626004803603604081101561028257600080fd5b506001600160a01b0381351690602001356104ca565b610162600480360360408110156102ae57600080fd5b506001600160a01b038135169060200135610506565b61017e600480360360408110156102da57600080fd5b506001600160a01b0381358116916020013516610513565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b600061039533848461053e565b50600192915050565b60025490565b60006103b184848461062a565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103f19186916103ec908663ffffffff61076c16565b61053e565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103959185906103ec908663ffffffff6107c916565b61044a828261082a565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103959185906103ec908663ffffffff61076c16565b600061039533848461062a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105835760405162461bcd60e51b81526004018080602001828103825260248152602001806109856024913960400191505060405180910390fd5b6001600160a01b0382166105c85760405162461bcd60e51b815260040180806020018281038252602281526020018061093e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661066f5760405162461bcd60e51b81526004018080602001828103825260258152602001806109606025913960400191505060405180910390fd5b6001600160a01b0382166106b45760405162461bcd60e51b815260040180806020018281038252602381526020018061091b6023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546106dd908263ffffffff61076c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610712908263ffffffff6107c916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107c3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610823576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610885576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610898908263ffffffff6107c916565b6002556001600160a01b0382166000908152602081905260409020546108c4908263ffffffff6107c916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820dbda9386a859adfde00616c132b1e21afdfacad5584875cb2586427a73191a7764736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461021057806370a082311461023e57806395d89b4114610264578063a457c2d71461026c578063a9059cbb14610298578063dd62ed3e146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610388565b604080519115158252519081900360200190f35b61017e61039e565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b038135811691602081013590911690604001356103a4565b6101ce6103fb565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b038135169060200135610404565b61023c6004803603604081101561022657600080fd5b506001600160a01b038135169060200135610440565b005b61017e6004803603602081101561025457600080fd5b50356001600160a01b031661044e565b6100c1610469565b6101626004803603604081101561028257600080fd5b506001600160a01b0381351690602001356104ca565b610162600480360360408110156102ae57600080fd5b506001600160a01b038135169060200135610506565b61017e600480360360408110156102da57600080fd5b506001600160a01b0381358116916020013516610513565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b600061039533848461053e565b50600192915050565b60025490565b60006103b184848461062a565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546103f19186916103ec908663ffffffff61076c16565b61053e565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103959185906103ec908663ffffffff6107c916565b61044a828261082a565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103959185906103ec908663ffffffff61076c16565b600061039533848461062a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105835760405162461bcd60e51b81526004018080602001828103825260248152602001806109856024913960400191505060405180910390fd5b6001600160a01b0382166105c85760405162461bcd60e51b815260040180806020018281038252602281526020018061093e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661066f5760405162461bcd60e51b81526004018080602001828103825260258152602001806109606025913960400191505060405180910390fd5b6001600160a01b0382166106b45760405162461bcd60e51b815260040180806020018281038252602381526020018061091b6023913960400191505060405180910390fd5b6001600160a01b0383166000908152602081905260409020546106dd908263ffffffff61076c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610712908263ffffffff6107c916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156107c3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610823576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610885576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610898908263ffffffff6107c916565b6002556001600160a01b0382166000908152602081905260409020546108c4908263ffffffff6107c916565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820dbda9386a859adfde00616c132b1e21afdfacad5584875cb2586427a73191a7764736f6c63430005100032",
  "sourceMap": "349:95:9:-;;;380:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;416:163:28;;;;;;;;;;;-1:-1:-1;;;416:163:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;416:163:28;;;;504:12;;416:163;;;437:1:9;;504:12:28;;:5;;416:163;504:12;:::i;:::-;-1:-1:-1;526:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:28;:20;;-1:-1:-1;;552:20:28;;;;;;;;;;;;-1:-1:-1;349:95:9;;-1:-1:-1;349:95:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;349:95:9;;;-1:-1:-1;349:95:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "349:95:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:95:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2453:145:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1514:89;;;:::i;:::-;;;;;;;;;;;;;;;;3055:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3055:252:26;;;;;;;;;;;;;;;;;:::i;1478:81:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3702:203:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3702:203:26;;;;;;;;:::i;256:89:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;256:89:9;;;;;;;;:::i;:::-;;1661:108:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1661:108:26;-1:-1:-1;;;;;1661:108:26;;:::i;838:85:28:-;;;:::i;4392:213:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4392:213:26;;;;;;;;:::i;1972:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1972:153:26;;;;;;;;:::i;2183:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2183:132:26;;;;;;;;;;:::i;644:81:28:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2453:145:26:-;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;-1:-1:-1;2587:4:26;2453:145;;;;:::o;1514:89::-;1584:12;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;-1:-1:-1;;;;;3235:19:26;;;;;;:11;:19;;;;;;;;3223:10;3235:31;;;;;;;;;3206:73;;3215:6;;3235:43;;3271:6;3235:43;:35;:43;:::i;:::-;3206:8;:73::i;:::-;-1:-1:-1;3296:4:26;3055:252;;;;;:::o;1478:81:28:-;1543:9;;;;1478:81;:::o;3702:203:26:-;3807:10;3782:4;3828:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3828:32:26;;;;;;;;;;3782:4;;3798:79;;3819:7;;3828:48;;3865:10;3828:48;:36;:48;:::i;256:89:9:-;318:22;324:7;333:6;318:5;:22::i;:::-;256:89;;:::o;1661:108:26:-;-1:-1:-1;;;;;1744:18:26;1718:7;1744:18;;;;;;;;;;;;1661:108::o;838:85:28:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4392:213:26;4502:10;4477:4;4523:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4523:32:26;;;;;;;;;;4477:4;;4493:84;;4514:7;;4523:53;;4560:15;4523:53;:36;:53;:::i;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;2183:132::-;-1:-1:-1;;;;;2281:18:26;;;2255:7;2281:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2183:132::o;7117:329::-;-1:-1:-1;;;;;7209:19:26;;7201:68;;;;-1:-1:-1;;;7201:68:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7287:21:26;;7279:68;;;;-1:-1:-1;;;7279:68:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7358:18:26;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7408:31;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;-1:-1:-1;;;;;5176:20:26;;5168:70;;;;-1:-1:-1;;;5168:70:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5256:23:26;;5248:71;;;;-1:-1:-1;;;5248:71:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:17:26;;:9;:17;;;;;;;;;;;:29;;5372:6;5350:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5330:17:26;;;:9;:17;;;;;;;;;;;:49;;;;5412:20;;;;;;;:32;;5437:6;5412:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5389:20:26;;;:9;:20;;;;;;;;;;;;:55;;;;5459:35;;;;;;;5389:20;;5459:35;;;;;;;;;;;;;5079:422;;;:::o;1274:179:24:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:24;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:24:o;5771:302:26:-;-1:-1:-1;;;;;5846:21:26;;5838:65;;;;;-1:-1:-1;;;5838:65:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:12;;:24;;5946:6;5929:24;:16;:24;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:26;;:9;:18;;;;;;;;;;;:30;;6007:6;5984:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;5963:18:26;;:9;:18;;;;;;;;;;;:51;;;;6029:37;;;;;;;5963:18;;:9;;6029:37;;;;;;;;;;5771:302;;:::o",
  "source": "pragma solidity >=0.4.25 <0.8.0;\n\nimport { ERC20 } from \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport { ERC20Detailed } from \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\n\ncontract MockERC20 is ERC20, ERC20Detailed {\n  function mint(address account, uint256 amount) external {\n    _mint(account, amount);\n  }\n}\n\ncontract USDT is MockERC20 {\n  constructor() public ERC20Detailed(\"Tether USD\", \"USDT\", 6) {}\n}\n\ncontract DIGG is MockERC20 {\n  constructor() public ERC20Detailed(\"Digg\", \"DIGG\", 9) {}\n}\n\ncontract WBTC is MockERC20 {\n  constructor() public ERC20Detailed(\"Wrapped BTC\", \"WBTC\", 8) {}\n}\n",
  "sourcePath": "/mnt/d/AGIN-WORKS-GITHUB/AURORA/factory-amm/contracts/MockTokens.sol",
  "ast": {
    "absolutePath": "/mnt/d/AGIN-WORKS-GITHUB/AURORA/factory-amm/contracts/MockTokens.sol",
    "exportedSymbols": {
      "DIGG": [
        2969
      ],
      "MockERC20": [
        2945
      ],
      "USDT": [
        2957
      ],
      "WBTC": [
        2981
      ]
    },
    "id": 2982,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2923,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:9"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 2925,
        "nodeType": "ImportDirective",
        "scope": 2982,
        "sourceUnit": 5132,
        "src": "34:78:9",
        "symbolAliases": [
          {
            "foreign": 2924,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2927,
        "nodeType": "ImportDirective",
        "scope": 2982,
        "sourceUnit": 5221,
        "src": "113:94:9",
        "symbolAliases": [
          {
            "foreign": 2926,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2928,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5131,
              "src": "231:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5131",
                "typeString": "contract ERC20"
              }
            },
            "id": 2929,
            "nodeType": "InheritanceSpecifier",
            "src": "231:5:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2930,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5220,
              "src": "238:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$5220",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 2931,
            "nodeType": "InheritanceSpecifier",
            "src": "238:13:9"
          }
        ],
        "contractDependencies": [
          5131,
          5220,
          5289
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2945,
        "linearizedBaseContracts": [
          2945,
          5220,
          5131,
          5289
        ],
        "name": "MockERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2943,
              "nodeType": "Block",
              "src": "312:33:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2939,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2933,
                        "src": "324:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2940,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2935,
                        "src": "333:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2938,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5017,
                      "src": "318:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "318:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2942,
                  "nodeType": "ExpressionStatement",
                  "src": "318:22:9"
                }
              ]
            },
            "documentation": null,
            "id": 2944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2933,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2944,
                  "src": "270:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2935,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2944,
                  "src": "287:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "269:33:9"
            },
            "returnParameters": {
              "id": 2937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:0:9"
            },
            "scope": 2945,
            "src": "256:89:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2982,
        "src": "209:138:9"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2946,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2945,
              "src": "366:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2945",
                "typeString": "contract MockERC20"
              }
            },
            "id": 2947,
            "nodeType": "InheritanceSpecifier",
            "src": "366:9:9"
          }
        ],
        "contractDependencies": [
          2945,
          5131,
          5220,
          5289
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2957,
        "linearizedBaseContracts": [
          2957,
          2945,
          5220,
          5131,
          5289
        ],
        "name": "USDT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2955,
              "nodeType": "Block",
              "src": "440:2:9",
              "statements": []
            },
            "documentation": null,
            "id": 2956,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "54657468657220555344",
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "415:12:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9a1ae89798edf3b90847f79f5a01a6aed1a89918d89ec92ed49335597a2f17c1",
                      "typeString": "literal_string \"Tether USD\""
                    },
                    "value": "Tether USD"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "55534454",
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "429:6:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                      "typeString": "literal_string \"USDT\""
                    },
                    "value": "USDT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "36",
                    "id": 2952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "437:1:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  }
                ],
                "id": 2953,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2949,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5220,
                  "src": "401:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$5220_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "401:38:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:9"
            },
            "returnParameters": {
              "id": 2954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "440:0:9"
            },
            "scope": 2957,
            "src": "380:62:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2982,
        "src": "349:95:9"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2958,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2945,
              "src": "463:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2945",
                "typeString": "contract MockERC20"
              }
            },
            "id": 2959,
            "nodeType": "InheritanceSpecifier",
            "src": "463:9:9"
          }
        ],
        "contractDependencies": [
          2945,
          5131,
          5220,
          5289
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2969,
        "linearizedBaseContracts": [
          2969,
          2945,
          5220,
          5131,
          5289
        ],
        "name": "DIGG",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2967,
              "nodeType": "Block",
              "src": "531:2:9",
              "statements": []
            },
            "documentation": null,
            "id": 2968,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "44696767",
                    "id": 2962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "512:6:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3405467b4beba6e2c6f69072f5d45f2762d4eebdd67c29b6f88e0df3d059e820",
                      "typeString": "literal_string \"Digg\""
                    },
                    "value": "Digg"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "44494747",
                    "id": 2963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "520:6:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0558fda071bfc544725213edcaaa3f855a4e2bfec5f07b9463fac5aab4908520",
                      "typeString": "literal_string \"DIGG\""
                    },
                    "value": "DIGG"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "39",
                    "id": 2964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "528:1:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_9_by_1",
                      "typeString": "int_const 9"
                    },
                    "value": "9"
                  }
                ],
                "id": 2965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2961,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5220,
                  "src": "498:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$5220_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "498:32:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:9"
            },
            "returnParameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:0:9"
            },
            "scope": 2969,
            "src": "477:56:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2982,
        "src": "446:89:9"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2970,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2945,
              "src": "554:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$2945",
                "typeString": "contract MockERC20"
              }
            },
            "id": 2971,
            "nodeType": "InheritanceSpecifier",
            "src": "554:9:9"
          }
        ],
        "contractDependencies": [
          2945,
          5131,
          5220,
          5289
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2981,
        "linearizedBaseContracts": [
          2981,
          2945,
          5220,
          5131,
          5289
        ],
        "name": "WBTC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2979,
              "nodeType": "Block",
              "src": "629:2:9",
              "statements": []
            },
            "documentation": null,
            "id": 2980,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5772617070656420425443",
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "603:13:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                      "typeString": "literal_string \"Wrapped BTC\""
                    },
                    "value": "Wrapped BTC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "57425443",
                    "id": 2975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "618:6:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                      "typeString": "literal_string \"WBTC\""
                    },
                    "value": "WBTC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "38",
                    "id": 2976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "626:1:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  }
                ],
                "id": 2977,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2973,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5220,
                  "src": "589:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$5220_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "589:39:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:9"
            },
            "returnParameters": {
              "id": 2978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:9"
            },
            "scope": 2981,
            "src": "568:63:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2982,
        "src": "537:96:9"
      }
    ],
    "src": "0:634:9"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/mnt/d/AGIN-WORKS-GITHUB/AURORA/factory-amm/contracts/MockTokens.sol",
      "exportedSymbols": {
        "DIGG": [
          2969
        ],
        "MockERC20": [
          2945
        ],
        "USDT": [
          2957
        ],
        "WBTC": [
          2981
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".25",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 2923,
        "name": "PragmaDirective",
        "src": "0:32:9"
      },
      {
        "attributes": {
          "SourceUnit": 5132,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
          "scope": 2982,
          "symbolAliases": [
            {
              "foreign": 2924,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 2925,
        "name": "ImportDirective",
        "src": "34:78:9"
      },
      {
        "attributes": {
          "SourceUnit": 5221,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
          "scope": 2982,
          "symbolAliases": [
            {
              "foreign": 2926,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 2927,
        "name": "ImportDirective",
        "src": "113:94:9"
      },
      {
        "attributes": {
          "contractDependencies": [
            5131,
            5220,
            5289
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            2945,
            5220,
            5131,
            5289
          ],
          "name": "MockERC20",
          "scope": 2982
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 5131,
                  "type": "contract ERC20"
                },
                "id": 2928,
                "name": "UserDefinedTypeName",
                "src": "231:5:9"
              }
            ],
            "id": 2929,
            "name": "InheritanceSpecifier",
            "src": "231:5:9"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Detailed",
                  "referencedDeclaration": 5220,
                  "type": "contract ERC20Detailed"
                },
                "id": 2930,
                "name": "UserDefinedTypeName",
                "src": "238:13:9"
              }
            ],
            "id": 2931,
            "name": "InheritanceSpecifier",
            "src": "238:13:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 2945,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "account",
                      "scope": 2944,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2932,
                        "name": "ElementaryTypeName",
                        "src": "270:7:9"
                      }
                    ],
                    "id": 2933,
                    "name": "VariableDeclaration",
                    "src": "270:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "scope": 2944,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2934,
                        "name": "ElementaryTypeName",
                        "src": "287:7:9"
                      }
                    ],
                    "id": 2935,
                    "name": "VariableDeclaration",
                    "src": "287:14:9"
                  }
                ],
                "id": 2936,
                "name": "ParameterList",
                "src": "269:33:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2937,
                "name": "ParameterList",
                "src": "312:0:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5017,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 2938,
                            "name": "Identifier",
                            "src": "318:5:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2933,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 2939,
                            "name": "Identifier",
                            "src": "324:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2935,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 2940,
                            "name": "Identifier",
                            "src": "333:6:9"
                          }
                        ],
                        "id": 2941,
                        "name": "FunctionCall",
                        "src": "318:22:9"
                      }
                    ],
                    "id": 2942,
                    "name": "ExpressionStatement",
                    "src": "318:22:9"
                  }
                ],
                "id": 2943,
                "name": "Block",
                "src": "312:33:9"
              }
            ],
            "id": 2944,
            "name": "FunctionDefinition",
            "src": "256:89:9"
          }
        ],
        "id": 2945,
        "name": "ContractDefinition",
        "src": "209:138:9"
      },
      {
        "attributes": {
          "contractDependencies": [
            2945,
            5131,
            5220,
            5289
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2957,
            2945,
            5220,
            5131,
            5289
          ],
          "name": "USDT",
          "scope": 2982
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "MockERC20",
                  "referencedDeclaration": 2945,
                  "type": "contract MockERC20"
                },
                "id": 2946,
                "name": "UserDefinedTypeName",
                "src": "366:9:9"
              }
            ],
            "id": 2947,
            "name": "InheritanceSpecifier",
            "src": "366:9:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 2957,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2948,
                "name": "ParameterList",
                "src": "391:2:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2954,
                "name": "ParameterList",
                "src": "440:0:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5220,
                      "type": "type(contract ERC20Detailed)",
                      "value": "ERC20Detailed"
                    },
                    "id": 2949,
                    "name": "Identifier",
                    "src": "401:13:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "54657468657220555344",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Tether USD\"",
                      "value": "Tether USD"
                    },
                    "id": 2950,
                    "name": "Literal",
                    "src": "415:12:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "55534454",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"USDT\"",
                      "value": "USDT"
                    },
                    "id": 2951,
                    "name": "Literal",
                    "src": "429:6:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "36",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 6",
                      "value": "6"
                    },
                    "id": 2952,
                    "name": "Literal",
                    "src": "437:1:9"
                  }
                ],
                "id": 2953,
                "name": "ModifierInvocation",
                "src": "401:38:9"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 2955,
                "name": "Block",
                "src": "440:2:9"
              }
            ],
            "id": 2956,
            "name": "FunctionDefinition",
            "src": "380:62:9"
          }
        ],
        "id": 2957,
        "name": "ContractDefinition",
        "src": "349:95:9"
      },
      {
        "attributes": {
          "contractDependencies": [
            2945,
            5131,
            5220,
            5289
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2969,
            2945,
            5220,
            5131,
            5289
          ],
          "name": "DIGG",
          "scope": 2982
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "MockERC20",
                  "referencedDeclaration": 2945,
                  "type": "contract MockERC20"
                },
                "id": 2958,
                "name": "UserDefinedTypeName",
                "src": "463:9:9"
              }
            ],
            "id": 2959,
            "name": "InheritanceSpecifier",
            "src": "463:9:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 2969,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2960,
                "name": "ParameterList",
                "src": "488:2:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2966,
                "name": "ParameterList",
                "src": "531:0:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5220,
                      "type": "type(contract ERC20Detailed)",
                      "value": "ERC20Detailed"
                    },
                    "id": 2961,
                    "name": "Identifier",
                    "src": "498:13:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "44696767",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Digg\"",
                      "value": "Digg"
                    },
                    "id": 2962,
                    "name": "Literal",
                    "src": "512:6:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "44494747",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"DIGG\"",
                      "value": "DIGG"
                    },
                    "id": 2963,
                    "name": "Literal",
                    "src": "520:6:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "39",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 9",
                      "value": "9"
                    },
                    "id": 2964,
                    "name": "Literal",
                    "src": "528:1:9"
                  }
                ],
                "id": 2965,
                "name": "ModifierInvocation",
                "src": "498:32:9"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 2967,
                "name": "Block",
                "src": "531:2:9"
              }
            ],
            "id": 2968,
            "name": "FunctionDefinition",
            "src": "477:56:9"
          }
        ],
        "id": 2969,
        "name": "ContractDefinition",
        "src": "446:89:9"
      },
      {
        "attributes": {
          "contractDependencies": [
            2945,
            5131,
            5220,
            5289
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2981,
            2945,
            5220,
            5131,
            5289
          ],
          "name": "WBTC",
          "scope": 2982
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "MockERC20",
                  "referencedDeclaration": 2945,
                  "type": "contract MockERC20"
                },
                "id": 2970,
                "name": "UserDefinedTypeName",
                "src": "554:9:9"
              }
            ],
            "id": 2971,
            "name": "InheritanceSpecifier",
            "src": "554:9:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 2981,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2972,
                "name": "ParameterList",
                "src": "579:2:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2978,
                "name": "ParameterList",
                "src": "629:0:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5220,
                      "type": "type(contract ERC20Detailed)",
                      "value": "ERC20Detailed"
                    },
                    "id": 2973,
                    "name": "Identifier",
                    "src": "589:13:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "5772617070656420425443",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Wrapped BTC\"",
                      "value": "Wrapped BTC"
                    },
                    "id": 2974,
                    "name": "Literal",
                    "src": "603:13:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "57425443",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"WBTC\"",
                      "value": "WBTC"
                    },
                    "id": 2975,
                    "name": "Literal",
                    "src": "618:6:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "38",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 8",
                      "value": "8"
                    },
                    "id": 2976,
                    "name": "Literal",
                    "src": "626:1:9"
                  }
                ],
                "id": 2977,
                "name": "ModifierInvocation",
                "src": "589:39:9"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 2979,
                "name": "Block",
                "src": "629:2:9"
              }
            ],
            "id": 2980,
            "name": "FunctionDefinition",
            "src": "568:63:9"
          }
        ],
        "id": 2981,
        "name": "ContractDefinition",
        "src": "537:96:9"
      }
    ],
    "id": 2982,
    "name": "SourceUnit",
    "src": "0:634:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-02-18T00:16:54.304Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}